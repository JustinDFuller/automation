{
  "Parameters": {
    "RootDomainName": {
      "Type": "String",
      "Description": "The root domain name for our site, e.g. `example.com`"
    },
    "GithubUser": {
      "Type": "String",
      "Description": "The github user to retrieve the source repository from."
    },
    "GithubRepo": {
      "Type": "String",
      "Description": "The github repository to retrieve the source from."
    },
    "OriginAccessIdentityComment": {
      "Default": "",
      "Type": "String",
      "Description": "The comment for the OriginAccessIdentity used to connect cloudfront to our S3 bucket"
    }
  },
  "Resources": {
    "SiteS3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "WebsiteConfiguration": {
          "IndexDocument": "index.html",
          "ErrorDocument": "404.html"
        },
        "BucketName": "RootDomainName"
      }
    },
    "SiteBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": "SiteS3Bucket",
        "PolicyDocument": {
          "Statement": [
            {
              "Sid": "ReadAccess",
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": "${SiteS3Bucket.Arn}/*",
              "Principal": {
                "CanonicalUser": "CloudFrontOAI.S3CanonicalUserId"
              }
            }
          ]
        }
      }
    },
    "SiteContinuousBuild": {
      "Type" : "AWS::CodeBuild::Project",
      "Properties" : {
        "Name": "RootDomainName",
        "BadgeEnabled": true,
        "Description": "Site continuous build for RootDomainName",
        "Environment": {                           
            "ComputeType": "BUILD_GENERAL1_SMALL", 
            "PrivilegedMode": false,               
            "Image": "aws/codebuild/nodejs:10.1.0",
            "Type": "LINUX_CONTAINER",             
            "EnvironmentVariables": []             
        },
        "Artifacts": {
          "Packaging": "NONE",
          "Name": "RootDomainName",
          "NamespaceType": "NONE",
          "Location": "RootDomainName",
          "Path": "",
          "Type": "S3",
          "EncryptionDisabled": true
        },
        "Source": {                                                                    
          "GitCloneDepth": 1,                                                        
          "Type": "GITHUB",                                                          
          "Location": "https://github.com/GithubUser/GithubRepo.git",
          "InsecureSsl": false                                                       
        },
        "Triggers": {
          "Webhook": true
        },
        "TimeoutInMinutes": 5
      }
    },
    "TLSCertificate": {
      "Type": "AWS::CertificateManager::Certificate",
      "Properties": {
        "DomainName": "RootDomainName",
        "SubjectAlternativeNames": [
          [
            ".",
            [
              "www",
              "RootDomainName"
            ]
          ]
        ]
      }
    },
    "CloudFrontOAI": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "OriginAccessIdentityComment"
        }
      }
    },
    "SiteCDN": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Enabled": true,
          "Aliases": [
            "RootDomainName"
          ],
          "Origins": [
            {
              "Id": "S3Bucket",
              "DomainName": [
                "SiteS3Bucket",
                "DomainName"
              ],
              "S3OriginConfig": {
                "OriginAccessIdentity": "origin-access-identity/cloudfront/${CloudFrontOAI}"
              }
            }
          ],
          "HttpVersion": "http2",
          "ViewerCertificate": {
            "AcmCertificateArn": "TLSCertificate",
            "SslSupportMethod": "sni-only"
          },
          "DefaultRootObject": "index.html",
          "DefaultCacheBehavior": {
            "TargetOriginId": "S3Bucket",
            "ViewerProtocolPolicy": "redirect-to-https",
            "MaxTTL": 86400,
            "ForwardedValues": {
              "QueryString": false
            }
          },
          "CustomErrorResponses": [
            {
              "ErrorCachingMinTTL": 0,
              "ErrorCode": 400,
              "ResponseCode": 400,
              "ResponsePagePath": "/error.html"
            },
            {
              "ErrorCachingMinTTL": 0,
              "ErrorCode": 403,
              "ResponseCode": 403,
              "ResponsePagePath": "/error.html"
            },
            {
              "ErrorCachingMinTTL": 0,
              "ErrorCode": 404,
              "ResponseCode": 404,
              "ResponsePagePath": "/error.html"
            },
            {
              "ErrorCachingMinTTL": 0,
              "ErrorCode": 500,
              "ResponseCode": 500,
              "ResponsePagePath": "/error.html"
            },
            {
              "ErrorCachingMinTTL": 0,
              "ErrorCode": 503,
              "ResponseCode": 503,
              "ResponsePagePath": "/error.html"
            }
          ]
        }
      }
    },
    "SiteHostedZone": {
      "Type": "AWS::Route53::HostedZone",
      "Properties": {
        "Name": "RootDomainName"
      }
    },
    "SiteDNSRecord": {
      "Type": "AWS::Route53::RecordSetGroup",
      "Properties": {
        "HostedZoneId": "SiteHostedZone",
        "RecordSets": [
          {
            "Name": "RootDomainName",
            "Type": "A",
            "AliasTarget": {
              "DNSName": [
                "SiteCDN",
                "DomainName"
              ],
              "HostedZoneId": "Z2FDTNDATAQYW2"
            }
          },
          {
            "Name": [
              ".",
              [
                "www",
                "RootDomainName"
              ]
            ],
            "Type": "CNAME",
            "TTL": 600,
            "ResourceRecords": [
              "RootDomainName"
            ]
          }
        ]
      }
    }
  },
  "Outputs": {
    "WebsiteURL": {
      "Description": "URL for the website",
      "Value": [
        "",
        [
          "https://",
          "RootDomainName"
        ]
      ]
    },
    "NameServers": {
      "Description": "DNS NameServers for the site",
      "Value": [
        ", ",
        [
          "SiteHostedZone",
          "NameServers"
        ]
      ]
    },
    "CloudFrontDistributionId": {
      "Description": "The CloudFront Distribution Id to be used for creating invalidations during deployment",
      "Value": "SiteCDN"
    }
  }
}
